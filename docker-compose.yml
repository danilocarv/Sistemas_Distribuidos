# docker-compose.yml (VERSÃO CORRIGIDA E COMPLETA)

# A linha 'version' é obsoleta e pode ser removida.
# version: '3.8' 

services:
  # Seu serviço de listas, agora na rede compartilhada
  listas-service:
    build: ./backend/listas-service
    container_name: listas_service
    volumes:
      - ./backend/listas-service:/app
      - /app/node_modules
    environment:
      - MONGO_URL=mongodb://db:27017/listacompartilhada
    depends_on:
      - db
    networks:
      - app-network

  # Seu serviço de itens, agora na rede compartilhada
  itens-service:
    build: ./backend/itens-service
    container_name: itens_service
    volumes:
      - ./backend/itens-service:/app
      - /app/node_modules
    environment:
      - MONGO_URL=mongodb://db:27017/listacompartilhada
    depends_on:
      - db
    networks:
      - app-network

  # Novo serviço de usuário do seu amigo
  user_service:
    build:
      context: ./backend/user-service
    container_name: user_service
    command: npm start
    volumes:
      - ./backend/user-service:/app
      - /app/node_modules
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgres://user:password@user-db:5432/userdb
    depends_on:
      - user-db
    networks:
      - app-network

  # Seu banco de dados MongoDB, agora na rede compartilhada
  db:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Novo banco de dados PostgreSQL do seu amigo
  user-db:
    image: postgres:13-alpine
    container_name: user-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=userdb
    volumes:
      - user_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network

  # Seu frontend, agora na rede compartilhada
  frontend:
    build: ./frontend
    container_name: frontend_service
    volumes:
      - ./frontend/src:/app/src
    networks:
      - app-network

  # Seu proxy Nginx, agora esperando por todos os serviços
  proxy:
    build:
      context: ./nginx
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      - listas-service
      - itens-service
      - frontend
      - user_service # Adicionado
    networks:
      - app-network

# Unificação dos volumes para os dois bancos de dados
volumes:
  mongo-data:
  user_db_data:

# Definição da rede compartilhada para todos os serviços
networks:
  app-network:
    driver: bridge